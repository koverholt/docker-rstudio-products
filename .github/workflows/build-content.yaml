on:
  push:
    branches:
      - main
      - dev
  pull_request:

name: Content Images - Build, Test, Scan, and Push
jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: |
          MATRIX=$(jq -Mcr < content/matrix.json)
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: matrix
    name: content-base-${{ matrix.config.os }}-r${{ matrix.config.r }}-py${{ matrix.config.py }}--${{ github.ref }}

    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.matrix.outputs.matrix) }}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Build/Test/Scan/Push content base image
        id: build1
        uses: ./.github/actions/build-test-scan-push
        continue-on-error: true
        with:
          context: ./content/base
          os: ${{ matrix.config.os }}
          product: content-base
          image-tags: |
            rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }},
            ghcr.io/rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }},
            rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os_alt }},
            ghcr.io/rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os_alt }}
          build-args: |
            R_VERSION=${{ matrix.config.r }}
            PYTHON_VERSION=${{ matrix.config.py }}
          test-image: false
          push-image: ${{ github.ref == 'refs/heads/main' }}
          snyk-token: ${{ secrets.SNYK_TOKEN }}
          snyk-org-id: ${{ secrets.SNYK_ORG_ID }}
          ghcr-token: ${{ secrets.BUILD_PAT }}
          dockerhub-username: ${{ secrets.DOCKER_HUB_USERNAME }}
          dockerhub-token: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Begin retry logic

      - name: Wait 60s on failure before retrying
        if: steps.build1.outcome == 'failure'
        run: sleep 60

      - name: Retry - Build/Test/Scan/Push base pro image
        id: build2
        if: steps.build1.outcome == 'failure'
        uses: ./.github/actions/build-test-scan-push
        with:
          context: ./content/base
          os: ${{ matrix.config.os }}
          product: content-base
          image-tags: |
            rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }},
            ghcr.io/rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }},
            rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os_alt }},
            ghcr.io/rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os_alt }}
          build-args: |
            R_VERSION=${{ matrix.config.r }}
            PYTHON_VERSION=${{ matrix.config.py }}
          test-image: false
          push-image: ${{ github.ref == 'refs/heads/main' }}
          snyk-token: ${{ secrets.SNYK_TOKEN }}
          snyk-org-id: ${{ secrets.SNYK_ORG_ID }}
          ghcr-token: ${{ secrets.BUILD_PAT }}
          dockerhub-username: ${{ secrets.DOCKER_HUB_USERNAME }}
          dockerhub-token: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # End retry logic

  build-pro:
    runs-on: ubuntu-latest
    needs: [ matrix, build ]
    name: content-pro-${{ matrix.config.os }}-r${{ matrix.config.r }}-py${{ matrix.config.py }}--${{ github.ref }}

    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.matrix.outputs.matrix) }}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Build/Test/Scan/Push content pro image
        id: build1
        uses: ./.github/actions/build-test-scan-push
        continue-on-error: true
        with:
          context: ./content/pro
          os: ${{ matrix.config.os }}
          product: content-pro
          image-tags: |
            rstudio/content-pro:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}
            ghcr.io/rstudio/content-pro:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}
            rstudio/content-pro:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os_alt }}
            ghcr.io/rstudio/content-pro:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os_alt }}
          build-args: |
            R_VERSION=${{ matrix.config.r }}
            PYTHON_VERSION=${{ matrix.config.py }}
            DRIVERS_VERSION=${{ matrix.config.drivers }}
            BASE_IMAGE=rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}
          test-image: false
          push-image: ${{ github.ref == 'refs/heads/main' }}
          snyk-token: ${{ secrets.SNYK_TOKEN }}
          snyk-org-id: ${{ secrets.SNYK_ORG_ID }}
          ghcr-token: ${{ secrets.BUILD_PAT }}
          dockerhub-username: ${{ secrets.DOCKER_HUB_USERNAME }}
          dockerhub-token: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Begin retry logic

      - name: Wait 60s on failure before retrying
        if: steps.build1.outcome == 'failure'
        run: sleep 60

      - name: Retry - Build/Test/Scan/Push base pro image
        id: build2
        if: steps.build1.outcome == 'failure'
        uses: ./.github/actions/build-test-scan-push
        with:
          context: ./content/pro
          os: ${{ matrix.config.os }}
          product: content-pro
          image-tags: |
            rstudio/content-pro:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}
            ghcr.io/rstudio/content-pro:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}
            rstudio/content-pro:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os_alt }}
            ghcr.io/rstudio/content-pro:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os_alt }}
          build-args: |
            R_VERSION=${{ matrix.config.r }}
            PYTHON_VERSION=${{ matrix.config.py }}
            DRIVERS_VERSION=${{ matrix.config.drivers }}
            BASE_IMAGE=rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}
          test-image: false
          push-image: ${{ github.ref == 'refs/heads/main' }}
          snyk-token: ${{ secrets.SNYK_TOKEN }}
          snyk-org-id: ${{ secrets.SNYK_ORG_ID }}
          ghcr-token: ${{ secrets.BUILD_PAT }}
          dockerhub-username: ${{ secrets.DOCKER_HUB_USERNAME }}
          dockerhub-token: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # End retry logic
