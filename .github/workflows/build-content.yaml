on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: build/push RStudio Content Images
jobs:

  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          MATRIX=$(jq -Mcr < content/matrix.json)
          echo "::set-output name=matrix::$MATRIX"

  build:
    runs-on: ubuntu-latest
    needs: matrix
    name: r${{ matrix.config.r }} py${{ matrix.config.py }} ${{ matrix.config.os }} ${{ github.ref }}

    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.matrix.outputs.matrix) }}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./content/base/${{ matrix.config.os }}
          file: ./content/base/${{ matrix.config.os }}/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          tags: |
            rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}
            ghcr.io/rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          outputs: type=docker,dest=/tmp/r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}-image.tar
          build-args: |
            R_VERSION=${{ matrix.config.r }}
            PYTHON_VERSION=${{ matrix.config.py }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}-image
          path: /tmp/r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}-image.tar

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build-pro:
    runs-on: ubuntu-latest
    needs: [ matrix, build ]
    name: pro r${{ matrix.config.r }} py${{ matrix.config.py }} ${{ matrix.config.os }} ${{ github.ref }}

    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.matrix.outputs.matrix) }}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./content/pro/${{ matrix.config.os }}
          file: ./content/pro/${{ matrix.config.os }}/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          tags: |
            rstudio/content-pro:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}
            ghcr.io/rstudio/content-pro:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          outputs: type=docker,dest=/tmp/pro-r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}-image.tar
          build-args: |
            R_VERSION=${{ matrix.config.r }}
            PYTHON_VERSION=${{ matrix.config.py }}
            DRIVERS_VERSION=${{ matrix.config.drivers }}
            BASE_IMAGE=rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: pro-r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}-image
          path: /tmp/pro-r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}-image.tar

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  push:
    runs-on: ubuntu-latest
    needs: [ matrix, build ]
    if: ${{ github.ref == 'refs/heads/main' }}
    name: push-r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }} ${{ github.ref }}

    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.matrix.outputs.matrix) }}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}-image
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}-image.tar
          docker image ls -a

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.BUILD_PAT }}

      - name: Push image(s)
        run: |
          docker push rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}
          docker push ghcr.io/rstudio/content-base:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}

  push-pro:
    runs-on: ubuntu-latest
    needs: [ matrix, build-pro ]
    if: ${{ github.ref == 'refs/heads/main' }}
    name: push-pro-r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }} ${{ github.ref }}

    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.matrix.outputs.matrix) }}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: pro-r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}-image
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/pro-r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}-image.tar
          docker image ls -a

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.BUILD_PAT }}

      - name: Push image(s)
        run: |
          docker push rstudio/content-pro:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}
          docker push ghcr.io/rstudio/content-pro:r${{ matrix.config.r }}-py${{ matrix.config.py }}-${{ matrix.config.os }}
