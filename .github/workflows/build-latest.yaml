on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: Build and Test (latest)
jobs:

  build:
    runs-on: ubuntu-latest
    name: build-${{ matrix.config.product}}

    # beware - several copies of matrix below
    strategy:
      fail-fast: false
      matrix:
        config:
          - {product: 'rstudio-workbench', dir: 'server-pro', prefix: RSP, version: 1.4.1717-3}
          - {product: 'rstudio-connect', dir: 'connect', prefix: RSC, version: 1.8.8.2}
          - {product: 'rstudio-package-manager', dir: 'package-manager', prefix: RSPM, version: 1.2.2.1-17}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.config.dir }}
          file: ./${{ matrix.config.dir }}/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          tags: |
            rstudio/${{ matrix.config.product }}:latest
            rstudio/${{ matrix.config.product }}:${{ matrix.config.version }}
            ghcr.io/rstudio/${{ matrix.config.product }}:latest
            ghcr.io/rstudio/${{ matrix.config.product }}:${{ matrix.config.version }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          outputs: type=docker,dest=/tmp/${{ matrix.config.product }}-image.tar
          push: false
          build-args: |
            RSP_VERSION=${{ matrix.config.version }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.config.product }}-image
          path: /tmp/${{ matrix.config.product }}-image.tar

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  test:
    runs-on: ubuntu-latest
    name: test-${{ matrix.config.product}}
    needs: build

    strategy:
      fail-fast: false
      matrix:
        config:
          - {product: 'rstudio-workbench', dir: 'server-pro', prefix: RSP, version: 1.4.1717-3}
          - {product: 'rstudio-connect', dir: 'connect', prefix: RSC, version: 1.8.8.2}
          - {product: 'rstudio-package-manager', dir: 'package-manager', prefix: RSPM, version: 1.2.2.1-17}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.config.product}}-image
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/${{ matrix.config.product }}-image.tar
          docker image ls -a

      - name: Test image
        env:
          IMAGE_NAME: rstudio/${{ matrix.config.product }}:${{ matrix.config.version }}
          # because we cannot dynamically set env var names... set them all...
          RSP_VERSION: ${{ matrix.config.version }}
          RSC_VERSION: ${{ matrix.config.version }}
          RSPM_VERSION: ${{ matrix.config.version }}
        run: |
          docker-compose -f ./${{ matrix.config.dir }}/docker-compose.test.yml run sut

  push:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.ref == 'refs/heads/main' }}
    name: push-${{ matrix.config.product}}
    environment: build-and-push

    strategy:
      fail-fast: false
      matrix:
        config:
          - {product: 'rstudio-workbench', dir: 'server-pro', prefix: RSP, version: 1.4.1717-3}
          - {product: 'rstudio-connect', dir: 'connect', prefix: RSC, version: 1.8.8.2}
          - {product: 'rstudio-package-manager', dir: 'package-manager', prefix: RSPM, version: 1.2.2.1-17}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.config.product}}-image
          path: /tmp

      - name: Load image
        run: |
          docker load --input /tmp/${{ matrix.config.product }}-image.tar
          docker image ls -a

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.BUILD_PAT }}

      - name: Push image(s) to Docker Hub
        run: |
          docker push rstudio/${{ matrix.config.product }}:${{ matrix.config.version }}
          docker push rstudio/${{ matrix.config.product }}:latest
          docker push ghcr.io/rstudio/${{ matrix.config.product }}:${{ matrix.config.version }}
          docker push ghcr.io/rstudio/${{ matrix.config.product }}:latest
