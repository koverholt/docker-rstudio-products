on:
  workflow_dispatch:
    inputs:
      which:
        description: "Which images to build. Default 'all'. Options: 'all','rstudio-workbench-preview','rstudio-connect-preview','rstudio-connect-content-init-preview','rstudio-package-manager-preview','r-session-complete-preview'. Can also use a prefix (i.e. 'rstudio-connect') to trigger multiple image builds."
        required: true
        default: "all"
      version:
        description: "The version to build. Default 'auto'. Can use any string, but must have which != 'all' if using something other than 'auto'"
        required: false
        default: "auto"

name: build/test/push (adhoc preview)
jobs:

  matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          # filter the matrix configuration
          MATRIX=$(jq -Mcr < matrix-preview.json)
          echo "Raw Matrix: $MATRIX"
          echo "Input - which: ${{ github.event.inputs.which }}"
          # NOTE: blank which input here means that every product is selected
          MATRIX_FILTER=$(echo "$MATRIX" | jq -Mcr 'map(select((.product | startswith("${{ github.event.inputs.which }}"))or("all"=="${{ github.event.inputs.which }}")))')
          echo "Filtered Matrix: $MATRIX_FILTER"
          echo "::set-output name=matrix::$MATRIX_FILTER"

  build:
    runs-on: ubuntu-latest
    name: build-${{ matrix.config.tag_prefix }}${{ matrix.config.product }}:${{ matrix.config.version }}
    needs: matrix
    if: ${{ github.event.inputs.version == 'auto' || github.event.inputs.which != 'all' }}

    strategy:
      fail-fast: false
      matrix:
        config: ${{ fromJson(needs.matrix.outputs.matrix) }}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Get version
        id: version
        run: |
          # NOTE: --local ensures that "latest" builds use the version in our Makefile (instead of latest from the web)
          VERSION=`./get-version.py ${{ matrix.config.product }} --type=${{ matrix.config.version }} --local --override=${{ github.event.inputs.version }}`
          SAFE_VERSION=`echo -n "$VERSION" | sed 's/+/-/g'`
          echo "::set-output name=VERSION::${VERSION}"
          echo "::set-output name=SAFE_VERSION::${SAFE_VERSION}"
          if [[ "true" == "${{ github.ref == 'refs/heads/dev' }}" ]]; then
            BRANCH_PREFIX="dev-"
            echo "Setting BRANCH_PREFIX=$BRANCH_PREFIX-"
          elif [[ "true" == "${{ github.ref == 'refs/heads/dev-rspm' }}" ]]; then
            BRANCH_PREFIX="dev-rspm-"
            echo "Setting BRANCH_PREFIX=$BRANCH_PREFIX-"
          else
            BRANCH_PREFIX=""
          fi
          echo "::set-output name=BRANCH_PREFIX::${BRANCH_PREFIX}"

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.config.dir }}
          file: ./${{ matrix.config.dir }}/Dockerfile.${{ matrix.config.os }}
          builder: ${{ steps.buildx.outputs.name }}
          tags: |
            rstudio/${{ matrix.config.product }}:${{ steps.version.outputs.BRANCH_PREFIX }}${{ matrix.config.tag_prefix }}${{ matrix.config.version }}
            rstudio/${{ matrix.config.product }}:${{ steps.version.outputs.BRANCH_PREFIX }}${{ matrix.config.tag_prefix }}${{ steps.version.outputs.SAFE_VERSION }}
            ghcr.io/rstudio/${{ matrix.config.product }}:${{ steps.version.outputs.BRANCH_PREFIX }}${{ matrix.config.tag_prefix }}${{ matrix.config.version }}
            ghcr.io/rstudio/${{ matrix.config.product }}:${{ steps.version.outputs.BRANCH_PREFIX }}${{ matrix.config.tag_prefix }}${{ steps.version.outputs.SAFE_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          load: true
          push: false
          build-args: |
            RSW_VERSION=${{ steps.version.outputs.VERSION }}
            RSC_VERSION=${{ steps.version.outputs.VERSION }}
            RSPM_VERSION=${{ steps.version.outputs.VERSION }}
            # TODO: need a better way to handle pivoting DOWNLOAD_URL for OS
            RSW_DOWNLOAD_URL=https://s3.amazonaws.com/rstudio-ide-build/server/${{ matrix.config.os }}/${{ matrix.config.arch }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Show image size
        run: |
          docker image ls

      - name: Test image
        env:
          IMAGE_NAME: rstudio/${{ matrix.config.product }}:${{ steps.version.outputs.BRANCH_PREFIX }}${{ matrix.config.tag_prefix }}${{ matrix.config.version }}
          # because we cannot dynamically set env var names... set them all...
          RSW_VERSION: ${{ steps.version.outputs.VERSION }}
          RSC_VERSION: ${{ steps.version.outputs.VERSION }}
          RSPM_VERSION: ${{ steps.version.outputs.VERSION }}
          RSC_LICENSE: ${{ secrets.RSC_LICENSE }}
          RSPM_LICENSE: ${{ secrets.RSPM_LICENSE }}
          RSW_LICENSE: ${{ secrets.RSW_LICENSE }}
        run: |
          docker-compose -f ./${{ matrix.config.dir }}/docker-compose.test.yml run sut

      - name: Login to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/dev-rspm' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to ghcr.io
        if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/dev-rspm' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.BUILD_PAT }}

      - name: Push image(s) to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/dev-rspm' }}
        run: |
          docker push rstudio/${{ matrix.config.product }}:${{ steps.version.outputs.BRANCH_PREFIX }}${{ matrix.config.tag_prefix }}${{ matrix.config.version }}
          docker push rstudio/${{ matrix.config.product }}:${{ steps.version.outputs.BRANCH_PREFIX }}${{ matrix.config.tag_prefix }}${{ steps.version.outputs.SAFE_VERSION }}
          docker push ghcr.io/rstudio/${{ matrix.config.product }}:${{ steps.version.outputs.BRANCH_PREFIX }}${{ matrix.config.tag_prefix }}${{ matrix.config.version }}
          docker push ghcr.io/rstudio/${{ matrix.config.product }}:${{ steps.version.outputs.BRANCH_PREFIX }}${{ matrix.config.tag_prefix }}${{ steps.version.outputs.SAFE_VERSION }}
