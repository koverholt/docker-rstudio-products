on:
  schedule:
    # every morning at 8am UTC
    # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onschedule
    - cron: '0 8 * * *'
  push:
    branches:
      - main
      - dev
      - dev-rspm
  pull_request:

name: build/test/push (preview)
jobs:


  build:
    runs-on: ubuntu-latest
    name: build-${{ matrix.config.product }}:${{ matrix.config.type }}:${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
         - {product: "workbench", type: "daily", os: "bionic"}
         - {product: "workbench", type: "daily", os: "jammy"}
         - {product: "workbench", type: "preview", os: "bionic"}
         - {product: "workbench", type: "preview", os: "jammy"}
         - {product: "connect", type: "daily", os: "bionic"}
         - {product: "connect", type: "daily", os: "jammy"}
         - {product: "connect-content-init", type: "daily", os: "bionic"}
         - {product: "connect-content-init", type: "daily", os: "jammy"}
         - {product: "package-manager", type: "daily", os: "bionic"}
         - {product: "package-manager", type: "daily", os: "jammy"}
         - {product: "r-session-complete", type: "daily", os: "bionic"}
         - {product: "r-session-complete", type: "daily", os: "jammy"}
         - {product: "r-session-complete", type: "daily", os: "centos7"}
         - {product: "r-session-complete", type: "preview", os: "bionic"}
         - {product: "r-session-complete", type: "preview", os: "jammy"}
         - {product: "r-session-complete", type: "preview", os: "centos7"}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Set up Just
        uses: extractions/setup-just@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Get Version
        id: get-version
        run: |
          VERSION=`just -f ci.Justfile get-version ${{ matrix.config.product }} --type=${{ matrix.config.type }} --local`
          echo "::set-output name=VERSION::$VERSION"

      - name: Build Image
        id: build-image
        run: |
          TAGS=`just -f ci.Justfile BUILDX_PATH=${{ steps.buildx.outputs.name }} build-preview ${{ matrix.config.type }} ${{ matrix.config.product }} ${{ matrix.config.os }} ${{ steps.get-version.outputs.VERSION }}`
          echo "::set-output name=TAGS::$TAGS"

      - name: Show image size
        run: |
          docker image ls

      - name: Test image
        env:
          RSC_LICENSE: ${{ secrets.RSC_LICENSE }}
          RSPM_LICENSE: ${{ secrets.RSPM_LICENSE }}
          RSW_LICENSE: ${{ secrets.RSW_LICENSE }}
        run: |
          just test-image ${{ matrix.config.product }} ${{  steps.get-version.outputs.VERSION }} ${{ steps.build-image.outputs.TAGS }}

      - name: Login to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/dev-rspm' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to ghcr.io
        if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/dev-rspm' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.BUILD_PAT }}

      - name: Push image(s) to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/dev-rspm' }}
        run: |
          just -f ci.Justfile push-images ${{ steps.build-image.outputs.TAGS }}
