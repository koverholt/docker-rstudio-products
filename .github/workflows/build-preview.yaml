on:
  schedule:
    # every morning at 8am UTC
    # https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onschedule
    # make sure to change the `if` commands below when changing the schedule
    - cron: '0 8 * * *'
    - cron: '0 9 * * *'
  push:
    branches:
      - main
      - dev
      - dev-rspm
  pull_request:

name: build/test/push (preview)
jobs:


  build:
    runs-on: ubuntu-latest
    name: build-${{ matrix.config.product }}:${{ matrix.config.type }}:${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
         - {product: "workbench", type: "daily", os: "ubuntu2204", r-primary: "4.2.3", r-alternate: "4.1.3", py-primary: "3.9.14", py-alternate: "3.8.15"}
         - {product: "workbench", type: "preview", os: "ubuntu2204", r-primary: "4.2.3", r-alternate: "4.1.3", py-primary: "3.9.14", py-alternate: "3.8.15"}
         - {product: "connect", type: "daily", os: "ubuntu1804", r-primary: "4.2.0", r-alternate: "3.6.2", py-primary: "3.9.5", py-alternate: "3.8.10"}
         - {product: "connect", type: "daily", os: "ubuntu2204", r-primary: "4.2.0", r-alternate: "3.6.2", py-primary: "3.9.5", py-alternate: "3.8.10"}
         - {product: "connect-content-init", type: "daily", os: "ubuntu1804", r-primary: "4.2.0", r-alternate: "3.6.2", py-primary: "3.9.5", py-alternate: "3.8.10"}
         - {product: "connect-content-init", type: "daily", os: "ubuntu2204", r-primary: "4.2.0", r-alternate: "3.6.2", py-primary: "3.9.5", py-alternate: "3.8.10"}
         - {product: "package-manager", type: "daily", os: "ubuntu1804", r-primary: "4.2.0", r-alternate: "3.6.2", py-primary: "3.9.5", py-alternate: "3.8.10"}
         - {product: "package-manager", type: "daily", os: "ubuntu2204", r-primary: "4.2.0", r-alternate: "3.6.2", py-primary: "3.9.5", py-alternate: "3.8.10"}
         - {product: "r-session-complete", type: "daily", os: "ubuntu2204", r-primary: "4.2.3", r-alternate: "4.1.3", py-primary: "3.9.14", py-alternate: "3.8.15"}
         - {product: "r-session-complete", type: "daily", os: "centos7", r-primary: "4.2.3", r-alternate: "4.1.3", py-primary: "3.9.14", py-alternate: "3.8.15"}
         - {product: "r-session-complete", type: "preview", os: "ubuntu2204", r-primary: "4.2.3", r-alternate: "4.1.3", py-primary: "3.9.14", py-alternate: "3.8.15"}
         - {product: "r-session-complete", type: "preview", os: "centos7", r-primary: "4.2.3", r-alternate: "4.1.3", py-primary: "3.9.14", py-alternate: "3.8.15"}

    steps:
      # the schedule triggers on the "default" branch (dev), so we have to specify "main"
      # this schedule matching / specification is less than ideal at present and must be
      # kept in sync with the schedule specification at the top of the file
      - name: Check Out main Branch
        if: github.event.schedule == '0 8 * * *'
        uses: actions/checkout@v3
        with:
          ref: 'main'

      - name: Check Out Repo at Triggered Branch
        if: github.event.schedule != '0 8 * * *'
        uses: actions/checkout@v3

      - name: Set up Just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          just-version: '1.11.0'

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.BUILD_PAT }}

      - name: Get Version
        id: get-version
        run: |
          VERSION=`just -f ci.Justfile get-version ${{ matrix.config.product }} --type=${{ matrix.config.type }} --local`
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Build Image
        id: build-image
        run: |
          TAGS=`just -f ci.Justfile BUILDX_PATH=${{ steps.buildx.outputs.name }} R_VERSION=${{ matrix.config.r-primary }} R_VERSION_ALT=${{ matrix.config.r-alternate }} PYTHON_VERSION=${{ matrix.config.py-primary }} PYTHON_VERSION_ALT=${{ matrix.config.py-alternate }} build-preview ${{ matrix.config.type }} ${{ matrix.config.product }} ${{ matrix.config.os }} ${{ steps.get-version.outputs.VERSION }}`
          echo "TAGS=$TAGS" >> $GITHUB_OUTPUT

      - name: Show image size
        run: |
          docker image ls

      - name: Test image
        env:
          RSC_LICENSE: ${{ secrets.RSC_LICENSE }}
          RSPM_LICENSE: ${{ secrets.RSPM_LICENSE }}
          RSW_LICENSE: ${{ secrets.RSW_LICENSE }}
        run: |
          just R_VERSION=${{ matrix.config.r-primary }} R_VERSION_ALT=${{ matrix.config.r-alternate }} PYTHON_VERSION=${{ matrix.config.py-primary }} PYTHON_VERSION_ALT=${{ matrix.config.py-alternate }} test-image ${{ matrix.config.product }} ${{ steps.get-version.outputs.VERSION }} ${{ steps.build-image.outputs.TAGS }}

      - name: Login to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/dev-rspm' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push image(s) to registries
        if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/dev-rspm' }}
        run: |
          just -f ci.Justfile push-images ${{ steps.build-image.outputs.TAGS }}
