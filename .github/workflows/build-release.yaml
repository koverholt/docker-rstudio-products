on:
  schedule:
    - cron: '0 12 * * 1'
  push:
    branches:
      - main
  pull_request:

name: Build, Test, Push release version
jobs:
  build-base:
    runs-on: ubuntu-latest
    name: product-base-build-${{ matrix.config.os }}-r${{ matrix.config.r-primary }}_${{ matrix.config.r-alternate }}-py${{ matrix.config.py-primary }}_${{ matrix.config.py-alternate }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: 'centos7', r-primary: "4.2.0", r-alternate: "3.6.2", py-primary: "3.9.5", py-alternate: "3.8.10"}
          - {os: 'ubuntu2204', r-primary: "4.2.0", r-alternate: "3.6.2", py-primary: "3.9.5", py-alternate: "3.8.10"}
          - {os: 'ubuntu2204', r-primary: "4.2.3", r-alternate: "4.1.3", py-primary: "3.9.17", py-alternate: "3.8.17"}
          - {os: 'ubuntu2204', r-primary: "4.3.1", r-alternate: "4.2.3", py-primary: "3.11.4", py-alternate: "3.10.12"}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up Just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get build args
        id: get-build-args
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          BUILD_ARGS=$( \
              just -f ci.Justfile \
              R_VERSION=${{ matrix.config.r-primary }} \
              R_VERSION_ALT=${{ matrix.config.r-alternate }} \
              PYTHON_VERSION=${{ matrix.config.py-primary }} \
              PYTHON_VERSION_ALT=${{ matrix.config.py-alternate }} \
              get-base-args ${{ matrix.config.os }} product-base \
          )
          echo "BUILD_ARGS<<$EOF" >> $GITHUB_OUTPUT
          echo "$BUILD_ARGS" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

      - name: Get tags
        id: get-tags
        run: |
          IMAGE_TAGS=$( \
              just -f ci.Justfile \
              R_VERSION=${{ matrix.config.r-primary }} \
              R_VERSION_ALT=${{ matrix.config.r-alternate }} \
              PYTHON_VERSION=${{ matrix.config.py-primary }} \
              PYTHON_VERSION_ALT=${{ matrix.config.py-alternate }} \
              get-base-tags ${{ matrix.config.os }} product-base \
          )
          echo "IMAGE_TAGS=$IMAGE_TAGS" >> $GITHUB_OUTPUT

      - name: Build/Test/Scan/Push base image
        uses: ./.github/actions/build-test-scan-push
        with:
          context: ./product/base
          os: ${{ matrix.config.os }}
          product: product-base
          image-tags: ${{ steps.get-tags.outputs.IMAGE_TAGS }}
          build-args: ${{ steps.get-build-args.outputs.BUILD_ARGS }}
          push-image: ${{ github.ref == 'refs/heads/main' }}
          snyk-token: ${{ secrets.SNYK_TOKEN }}
          snyk-org-id: ${{ secrets.SNYK_ORG_ID }}
          ghcr-token: ${{ secrets.BUILD_PAT }}
          dockerhub-username: ${{ secrets.DOCKER_HUB_USERNAME }}
          dockerhub-token: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  build-base-pro:
    runs-on: ubuntu-latest
    name: product-base-pro-build-${{ matrix.config.os }}-r${{ matrix.config.r-primary }}_${{ matrix.config.r-alternate }}-py${{ matrix.config.py-primary }}_${{ matrix.config.py-alternate }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: 'centos7', r-primary: "4.2.0", r-alternate: "3.6.2", py-primary: "3.9.5", py-alternate: "3.8.10"}
          - {os: 'ubuntu2204', r-primary: "4.2.0", r-alternate: "3.6.2", py-primary: "3.9.5", py-alternate: "3.8.10"}
          - {os: 'ubuntu2204', r-primary: "4.2.3", r-alternate: "4.1.3", py-primary: "3.9.17", py-alternate: "3.8.17"}
          - {os: 'ubuntu2204', r-primary: "4.3.1", r-alternate: "4.2.3", py-primary: "3.11.4", py-alternate: "3.10.12"}

    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up Just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get build args
        id: get-build-args
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          BUILD_ARGS=$( \
              just -f ci.Justfile \
              R_VERSION=${{ matrix.config.r-primary }} \
              R_VERSION_ALT=${{ matrix.config.r-alternate }} \
              PYTHON_VERSION=${{ matrix.config.py-primary }} \
              PYTHON_VERSION_ALT=${{ matrix.config.py-alternate }} \
              get-base-args ${{ matrix.config.os }} product-base-pro \
          )
          echo "BUILD_ARGS<<$EOF" >> $GITHUB_OUTPUT
          echo "$BUILD_ARGS" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

      - name: Get tags
        id: get-tags
        run: |
          IMAGE_TAGS=$( \
              just -f ci.Justfile \
              R_VERSION=${{ matrix.config.r-primary }} \
              R_VERSION_ALT=${{ matrix.config.r-alternate }} \
              PYTHON_VERSION=${{ matrix.config.py-primary }} \
              PYTHON_VERSION_ALT=${{ matrix.config.py-alternate }} \
              get-base-tags ${{ matrix.config.os }} product-base-pro \
          )
          echo "IMAGE_TAGS=$IMAGE_TAGS" >> $GITHUB_OUTPUT

      - name: Build/Test/Scan/Push base pro image
        uses: ./.github/actions/build-test-scan-push
        with:
          context: ./product/pro
          os: ${{ matrix.config.os }}
          product: product-base-pro
          image-tags: ${{ steps.get-tags.outputs.IMAGE_TAGS }}
          build-args: ${{ steps.get-build-args.outputs.BUILD_ARGS }}
          push-image: ${{ github.ref == 'refs/heads/main' }}
          snyk-token: ${{ secrets.SNYK_TOKEN }}
          snyk-org-id: ${{ secrets.SNYK_ORG_ID }}
          ghcr-token: ${{ secrets.BUILD_PAT }}
          dockerhub-username: ${{ secrets.DOCKER_HUB_USERNAME }}
          dockerhub-token: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
