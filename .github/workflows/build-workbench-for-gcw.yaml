on:
  schedule:
    - cron: "0 8 * * 1"
  push:
    branches:
      - gcw-workbench
      - main
      - dev

name: Build Workbench for Google Cloud Workstations
jobs:
  build-workbench-for-gcw:
    runs-on: ubuntu-latest
    env:
      R_VERSION: 4.2.3
      R_VERSION_ALT: 4.1.3
      PYTHON_VERSION: 3.10.11
      PYTHON_VERSION_ALT: 3.9.16
      RSW_VERSION: 2023.03.1-446.pro1
      #RSW_DOWNLOAD_URL: https://s3.amazonaws.com/rstudio-ide-build/server/bionic/amd64
      IMAGE_REGISTRY_NAME: us-central1-docker.pkg.dev/posit-images/cloud-workstations/workbench

    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'

      - name: Check Out Repo
        uses: actions/checkout@v3
        with:
          ref: gcw-workbench

      - name: Set up Just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_ARTIFACT_REGISTRY_JSON }}'

      - name: Authenticate GCAR
        run: |
          gcloud auth configure-docker -q us-central1-docker.pkg.dev

# FIXME(ianpittwood): Caching keeps overrunning our disk space
#      - name: Cache Docker layers
#        uses: actions/cache@v3
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-

#      - name: Get Version
#        id: get-version
#        run: |
#          VERSION=`just -f ci.Justfile get-version workbench --type=release --local`
#          VERSION=${VERSION//\"/}
#          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
#          echo "TAG_SAFE_VERSION=${VERSION/+/-}" >> $GITHUB_OUTPUT

      - name: Build base image
        id: build
        run: |
          TAGS=$(just \
            BUILDX_PATH=${{ steps.buildx.outputs.name }} \
            RSW_VERSION=${{ env.RSW_VERSION }} \
            RSW_DOWNLOAD_URL=${{ env.RSW_DOWNLOAD_URL }} \
            R_VERSION=${{ env.R_VERSION }} \
            R_VERSION_ALT=${{ env.R_VERSION_ALT }} \
            PYTHON_VERSION=${{ env.PYTHON_VERSION }} \
            PYTHON_VERSION_ALT=${{ env.PYTHON_VERSION_ALT }} \
            PYTHON_VERSION_JUPYTER=${{ env.PYTHON_VERSION }} \
            workbench-for-google-cloud-workstations/build \
            ${{ env.IMAGE_REGISTRY_NAME }}:latest ${{ env.IMAGE_REGISTRY_NAME }}:${{ env.RSW_VERSION }})
          echo "TAGS=$TAGS" >> $GITHUB_OUTPUT

      - name: Test Image
        continue-on-error: true
        run: |
          IFS=" " read -a tags <<<"${{ steps.build.outputs.TAGS }}"
          just \
            RSW_VERSION=${{ env.RSW_VERSION }} \
            R_VERSION=${{ env.R_VERSION }} \
            R_VERSION_ALT=${{ env.R_VERSION_ALT }} \
            PYTHON_VERSION=${{ env.PYTHON_VERSION }} \
            PYTHON_VERSION_ALT=${{ env.PYTHON_VERSION_ALT }} \
            PYTHON_VERSION_JUPYTER=${{ env.PYTHON_VERSION }} \
            workbench-for-google-cloud-workstations/test "${tags[0]}"

      # FIXME: The second tag isn't persisting for some reason, having to reapply it here
      - name: Push Image
        run: |
          docker image ls
          docker tag ${{ steps.build.outputs.TAGS }}
          just -f ci.Justfile push-images ${{ steps.build.outputs.TAGS }}

#      - name: Move cache
#        run: |
#          rm -rf /tmp/.buildx-cache
#          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
