set positional-arguments

BUILDX_PATH := ""

IMAGE_PREFIX := "rstudio-"
PRODUCT := "connect"
IMAGE_OS := "ubuntu2204"

RSC_VERSION := "2023.07.0"
RSC_LICENSE := ""
RSC_LICENSE_SERVER := ""

R_VERSION := "4.2.3"
R_VERSION_ALT := "4.1.3"

PYTHON_VERSION := "3.9.17"
PYTHON_VERSION_ALT := "3.8.17"

PERSIST_LICENSE := "false"
PERSIST_LICENSE_DIR := join(justfile_directory(), "tmp-lic")

DEFAULT_TAG := IMAGE_PREFIX + PRODUCT + ":" + IMAGE_OS + "-" + RSC_VERSION

# Build Connect image - just build ubuntu2204 2022.10.0 rstudio/rstudio-connect:ubuntu2204-2022.10.0
build OS=IMAGE_OS VERSION=RSC_VERSION +TAGS=DEFAULT_TAG:
  #!/usr/bin/env bash
  set -euxo pipefail
  BUILDX_ARGS=""
  if [[ "{{BUILDX_PATH}}" != "" ]]; then
    BUILDX_ARGS="--cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache"
  fi
  tag_array=()
  for TAG in {{TAGS}}
  do
    tag_array+=("-t" $TAG)
  done

  docker buildx --builder="{{ BUILDX_PATH }}" build --load ${BUILDX_ARGS} \
    ${tag_array[@]} \
    --build-arg RSC_VERSION="{{ VERSION }}" \
    --build-arg R_VERSION="{{ R_VERSION }}" \
    --build-arg R_VERSION_ALT="{{ R_VERSION_ALT }}" \
    --build-arg PYTHON_VERSION="{{ PYTHON_VERSION }}" \
    --build-arg PYTHON_VERSION_ALT="{{ PYTHON_VERSION_ALT }}" \
    --file=./Dockerfile.$(just -f ../Justfile _parse-os {{OS}}) .

# Test Connect image - just test rstudio/rstudio-connect:ubuntu2204-2022.10.0 2022.10.0
test TAG=DEFAULT_TAG VERSION=RSC_VERSION CMD="":
  #!/usr/bin/env bash
  set -euxo pipefail
  IMAGE_NAME="{{ TAG }}" \
  RSC_VERSION="{{ VERSION }}" \
  RSC_LICENSE="{{ RSC_LICENSE }}" \
  RSC_LICENSE_SERVER="{{ RSC_LICENSE_SERVER }}" \
  R_VERSION="{{ R_VERSION }}" \
  R_VERSION_ALT="{{ R_VERSION_ALT }}" \
  PYTHON_VERSION="{{ PYTHON_VERSION }}" \
  PYTHON_VERSION_ALT="{{ PYTHON_VERSION_ALT }}" \
  docker-compose -f ./docker-compose.test.yml run sut {{ CMD }}

# Test Connect image interactively - just test-i rstudio/rstudio-connect:ubuntu2204-2022.10.0 2022.10.0
test-i TAG=DEFAULT_TAG VERSION=RSC_VERSION:
  just test {{ TAG }} {{ VERSION }} bash

# Run Connect - just RSC_LICENSE="<RSC license>" run rstudio/rstudio-connect:ubuntu2204-2022.10.0
run TAG=DEFAULT_TAG CMD="":
  #!/usr/bin/env bash
  set -euxo pipefail
  if [ -z "{{ RSC_LICENSE }}" ] && [ -z "{{ RSC_LICENSE_SERVER }}" ]; then
    echo "Please set RSC_LICENSE or RSC_LICENSE_SERVER before running."
    exit 1
  fi

  volume_opts=()
  if [ {{ PERSIST_LICENSE }} = "true" ]; then
    if [ {{RSC_LICENSE}} ]; then
      echo "Volumes will be configured to persist license state data for an activation key."
      volume_opts=$(just -f ../Justfile _config-license-persist-volumes key {{PRODUCT}} {{PERSIST_LICENSE_DIR}})
    elif [ {{RSC_LICENSE_SERVER}} ]; then
      echo "Volumes will be configured to persist license state data for a floating license server."
      volume_opts=$(just -f ../Justfile _config-license-persist-volumes float {{PRODUCT}} {{PERSIST_LICENSE_DIR}})
    fi
  fi

  docker run -it --privileged \
    ${volume_opts[@]} \
    -p 3939:3939 \
    -e RSC_LICENSE="{{ RSC_LICENSE }}" \
    -e RSC_LICENSE_SERVER="{{ RSC_LICENSE_SERVER }}" \
    "{{ TAG }}" {{ CMD }}
