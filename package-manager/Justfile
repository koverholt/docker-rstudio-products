set positional-arguments

BUILDX_PATH := ""

IMAGE_PREFIX := "rstudio-"
PRODUCT := "package-manager"
IMAGE_OS := "ubuntu2204"

RSPM_VERSION := "2023.12.0-13"
RSPM_LICENSE := ""
RSPM_LICENSE_SERVER := ""

R_VERSION := "4.2.3"
R_VERSION_ALT := "4.1.3"

PYTHON_VERSION := "3.12.1"
PYTHON_VERSION_ALT := "3.11.7"

PERSIST_LICENSE := "false"
PERSIST_LICENSE_DIR := join(justfile_directory(), "tmp-lic")

_make-default-tag OS=IMAGE_OS:
  echo "{{IMAGE_PREFIX}}{{PRODUCT}}:{{OS}}-$(just -f ../Justfile _get-tag-safe-version {{RSPM_VERSION}})"

# Build Package Manager image - just build ubuntu2204 2022.07.2-11 rstudio/rstudio-package-manager:ubuntu2204-2022.07.2-11
build OS=IMAGE_OS VERSION=RSPM_VERSION *TAGS="":
  #!/usr/bin/env bash
  set -euxo pipefail
  BUILDX_ARGS=""
  if [[ "{{BUILDX_PATH}}" != "" ]]; then
    BUILDX_ARGS="--cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache"
  fi

  if [[ "{{TAGS}}" == "" ]]; then
    raw_tag_array=($(just _make-default-tag {{OS}}))
  else
    raw_tag_array=("{{TAGS}}")
  fi

  tag_array=()
  for tag in $raw_tag_array
  do
    tag_array+=("-t" $tag)
  done

  docker buildx --builder="{{ BUILDX_PATH }}" build --load ${BUILDX_ARGS} \
    ${tag_array[@]} \
    --build-arg RSPM_VERSION="{{ VERSION }}" \
    --build-arg R_VERSION="{{ R_VERSION }}" \
    --build-arg R_VERSION_ALT="{{ R_VERSION_ALT }}" \
    --build-arg PYTHON_VERSION="{{ PYTHON_VERSION }}" \
    --build-arg PYTHON_VERSION_ALT="{{ PYTHON_VERSION_ALT }}" \
    --file=./Dockerfile.$(just -f ../Justfile _parse-os {{OS}}) .

# Test Package Manager image - just test rstudio/rstudio-package-manager:ubuntu2204-2022.07.2-11 2022.07.2-11
test TAG=`just _make-default-tag` VERSION=RSPM_VERSION CMD="":
  #!/usr/bin/env bash
  set -euxo pipefail
  IMAGE_NAME="{{ TAG }}" \
  RSPM_VERSION="{{ VERSION }}" \
  RSPM_LICENSE="{{ RSPM_LICENSE }}" \
  RSPM_LICENSE_SERVER="{{ RSPM_LICENSE_SERVER }}" \
  R_VERSION="{{ R_VERSION }}" \
  R_VERSION_ALT="{{ R_VERSION_ALT }}" \
  PYTHON_VERSION="{{ PYTHON_VERSION }}" \
  PYTHON_VERSION_ALT="{{ PYTHON_VERSION_ALT }}" \
  docker-compose -f ./docker-compose.test.yml run sut {{ CMD }}

# Test Package Manager image interactively - just test-i rstudio/rstudio-package-manager:ubuntu2204-2022.07.2-11 2022.07.2-11
test-i TAG=`just _make-default-tag` VERSION=RSPM_VERSION:
  just test {{ TAG }} {{ VERSION }} bash

# Run Package Manager - just RSPM_LICENSE="<RSPM license>" run rstudio/rstudio-package-manager:ubuntu2204-2022.07.2-11
run TAG=`just _make-default-tag` CMD="":
  #!/usr/bin/env bash
  set -euxo pipefail
  if [ -z "{{ RSPM_LICENSE }}" ] && [ -z "{{ RSPM_LICENSE_SERVER }}" ]; then
    echo "Please set RSPM_LICENSE or RSPM_LICENSE_SERVER before running."
    exit 1
  fi

  volume_opts=()
  if [ {{ PERSIST_LICENSE }} = "true" ]; then
    if [ {{RSPM_LICENSE}} ]; then
      echo "Volumes will be configured to persist license state data for an activation key."
      volume_opts=$(just -f ../Justfile _config-license-persist-volumes key {{PRODUCT}} {{PERSIST_LICENSE_DIR}})
    elif [ {{RSPM_LICENSE_SERVER}} ]; then
      echo "Volumes will be configured to persist license state data for a floating license server."
      volume_opts=$(just -f ../Justfile _config-license-persist-volumes float {{PRODUCT}} {{PERSIST_LICENSE_DIR}})
    fi
  fi

  docker run -it \
    ${volume_opts[@]} \
    -p 4242:4242 \
    -e RSPM_LICENSE="{{ RSPM_LICENSE }}" \
    -e RSPM_LICENSE_SERVER="{{ RSPM_LICENSE_SERVER }}" \
    "{{ TAG }}" {{ CMD }}
