package:
  pandoc:
    installed: true
  {{if .Env.OS | regexMatch "ubuntu.*"}}
  gpg:
    installed: true
  cracklib-runtime:
    installed: true
  {{end}}
  {{if .Env.OS | regexMatch "centos.*"}}
  epel-release:
    installed: true
  gnupg2:
    installed: true
  {{end}}

file:
  {{if .Env.OS | regexMatch "ubuntu.*"}}
  /opt/positscripts/apt.sh:
    exists: true
    mode: "0775"
  {{end}}
  {{if .Env.OS | regexMatch "centos.*"}}
  /opt/positscripts/yum.sh:
    exists: true
    mode: "0775"
  {{end}}
  /opt/positscripts/install_drivers.sh:
    exists: true
    mode: "0775"
  /opt/positscripts/install_python.sh:
    exists: true
    mode: "0775"
  /opt/positscripts/install_quarto.sh:
    exists: true
    mode: "0775"
  /opt/positscripts/install_r.sh:
    exists: true
    mode: "0775"
  /opt/R/{{.Env.R_VERSION}}/bin/R:
    exists: true
  /opt/R/{{.Env.R_VERSION_ALT}}/bin/R:
    exists: true
  /opt/python/{{.Env.PYTHON_VERSION}}/bin/python3:
    exists: true
  /opt/python/{{.Env.PYTHON_VERSION_ALT}}/bin/python3:
    exists: true
  /tini:
    exists: true
  /opt/quarto/{{.Env.QUARTO_VERSION}}/bin/quarto:
    exists: true
  {{if .Env.OS | regexMatch "ubuntu.*"}}
  # Check that `cracklib-runtime` is present so `chpasswd` works
  /var/cache/cracklib/cracklib_dict.pwd:
    exists: true
  {{end}}

command:
# Ensure correct R version
  "/opt/R/{{ .Env.R_VERSION }}/bin/R --version":
    title: r_version_match
    exit-status: 0
    stdout: [
      "{{ .Env.R_VERSION }}"
    ]
  "/opt/R/{{ .Env.R_VERSION_ALT }}/bin/R --version":
    title: r_version_match
    exit-status: 0
    stdout: [
      "{{ .Env.R_VERSION_ALT }}"
    ]

# Ensure correct python version
  "/opt/python/{{ .Env.PYTHON_VERSION }}/bin/python3 --version":
    title: python_version_matches
    exit-status: 0
    stdout: [
      "{{ .Env.PYTHON_VERSION }}"
    ]
  "/opt/python/{{ .Env.PYTHON_VERSION_ALT }}/bin/python3 --version":
    title: python_version_matches
    exit-status: 0
    stdout: [
      "{{ .Env.PYTHON_VERSION_ALT }}"
    ]

# Ensure correct Quarto version
  "/opt/quarto/{{ .Env.QUARTO_VERSION }}/bin/quarto --version":
    title: quarto_version_matches
    exit-status: 0
    stdout: [
      "{{ .Env.QUARTO_VERSION }}"
    ]
