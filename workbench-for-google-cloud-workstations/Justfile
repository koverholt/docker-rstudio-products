set dotenv-load
set positional-arguments

BUILDX_PATH := ""

PRODUCT := "workbench"
IMAGE_OS := "ubuntu2004"

RSW_LICENSE := ""
RSW_LICENSE_SERVER := ""

_make-default-tag:
  echo "${IMAGE_REGISTRY_NAME}:$(just -f ../Justfile _get-tag-safe-version "${RSW_VERSION}")"

get-version:
  echo "${RSW_VERSION}"

get-build-args:
  #!/usr/bin/env bash
  printf "RSW_VERSION=${RSW_VERSION}
  R_VERSION=${R_VERSION}
  R_VERSION_ALT=${R_VERSION_ALT}
  PYTHON_VERSION=${PYTHON_VERSION}
  PYTHON_VERSION_ALT=${PYTHON_VERSION_ALT}
  PYTHON_VERSION_JUPYTER=${PYTHON_VERSION_JUPYTER}
  QUARTO_VERSION=${QUARTO_VERSION}
  DRIVERS_VERSION=${DRIVERS_VERSION}
  SRC_IMAGE_NAME=${SRC_IMAGE_NAME}
  RSW_DOWNLOAD_URL=${RSW_DOWNLOAD_URL}"

get-build-tags:
  #!/usr/bin/env bash
  echo ${IMAGE_REGISTRY_NAME}:${RSW_TAG_VERSION},\
  ${IMAGE_REGISTRY_NAME}:latest

# Build Workbench image - just build 2022.07.2+576.pro12 rstudio/rstudio-workbench-gcw:2022.07.2
build *TAGS="":
  #!/usr/bin/env bash
  set -euxo pipefail
  CACHE_PATH=${GITHUB_WORKSPACE:-/tmp}
  BUILDX_ARGS=""
  if [[ "{{BUILDX_PATH}}" != "" ]]; then
    BUILDX_ARGS="--cache-from=type=local,src=${CACHE_PATH}/.buildx-cache --cache-to=type=local,dest=${CACHE_PATH}/.buildx-cache-new,mode=max"
  fi

  if [[ "{{TAGS}}" == "" ]]; then
    raw_tag_array=($(just _make-default-tag))
  else
    raw_tag_array=("{{TAGS}}")
  fi

  tag_array=()
  for tag in ${raw_tag_array[@]};
  do
    tag_array+=("-t" $tag)
  done

  docker buildx --builder="{{ BUILDX_PATH }}" build --load ${BUILDX_ARGS} \
    ${tag_array[@]} \
    --build-arg RSW_VERSION="${RSW_VERSION}" \
    --build-arg R_VERSION="${R_VERSION}" \
    --build-arg R_VERSION_ALT="${R_VERSION_ALT}" \
    --build-arg PYTHON_VERSION="${PYTHON_VERSION}" \
    --build-arg PYTHON_VERSION_ALT="${PYTHON_VERSION_ALT}" \
    --build-arg PYTHON_VERSION_JUPYTER="${PYTHON_VERSION_JUPYTER}" \
    --build-arg QUARTO_VERSION="${QUARTO_VERSION}" \
    --build-arg DRIVERS_VERSION="${DRIVERS_VERSION}" \
    --build-arg RSW_DOWNLOAD_URL="${RSW_DOWNLOAD_URL}" \
    --file=./Dockerfile.ubuntu2004 .

  echo ${raw_tag_array[@]}

# Test Workbench image - just test rstudio/rstudio-workbench:ubuntu1804-2022.07.2-576.pro12 2022.07.2+576.pro12
test TAG=`just _make-default-tag` CMD="":
  #!/usr/bin/env bash
  set -euxo pipefail
  RSW_VERSION_CLEAN=$(sed "s/daily-/daily+/" <<<"${RSW_VERSION}")
  IMAGE_NAME="{{ TAG }}" \
  RSW_VERSION="${RSW_VERSION_CLEAN}" \
  RSW_LICENSE="{{ RSW_LICENSE }}" \
  RSW_LICENSE_SERVER="{{ RSW_LICENSE_SERVER }}" \
  DRIVERS_VERSION="${DRIVERS_VERSION}" \
  R_VERSION="${R_VERSION}" \
  R_VERSION_ALT="${R_VERSION_ALT}" \
  PYTHON_VERSION="${PYTHON_VERSION}" \
  PYTHON_VERSION_ALT="${PYTHON_VERSION_ALT}" \
  PYTHON_VERSION_JUPYTER="${PYTHON_VERSION_JUPYTER}" \
  QUARTO_VERSION="${QUARTO_VERSION}" \
  docker-compose -f ./docker-compose.test.yml run sut {{ CMD }}

# Test Workbench image interactively - just test-i rstudio/rstudio-workbench:ubuntu1804-2022.07.2-576.pro12 2022.07.2+576.pro12
test-i TAG=`just _make-default-tag`:
  just test {{ TAG }} bash

# Run Workbench - just RSW_LICENSE="<RSW license>" run rstudio/r-session-complete:ubuntu1804-2022.07.2-576.pro12
run TAG=`just _make-default-tag` CMD="":
  #!/usr/bin/env bash
  set -euo pipefail
  if [ -z "{{ RSW_LICENSE }}" ] && [ -z "{{ RSW_LICENSE_SERVER }}" ]; then
    echo "Please set RSW_LICENSE or RSW_LICENSE_SERVER before running."
    exit 1
  fi

  docker run -it --privileged \
    ${volume_opts[@]} \
    -p 8787:80 \
    -e RSW_LICENSE="{{ RSW_LICENSE }}" \
    -e RSW_LICENSE_SERVER="{{ RSW_LICENSE_SERVER }}" \
    "{{ TAG }}" {{ CMD }}
