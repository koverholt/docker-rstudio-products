FROM rstudio/r-base:centos7 AS workbench
LABEL maintainer="RStudio Docker <docker@rstudio.com>"

# Locale configuration --------------------------------------------------------#
RUN localedef -i en_US -f UTF-8 en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

# hadolint ignore=DL3008,DL3009
RUN yum update -y \
	&& yum install -y epel-release \
	&& yum install -y --setopt=skip_missing_names_on_install=False \
        bzip2 \
        ca-certificates \
        git \
        libffi \
        psmisc \
        oddjob-mkhomedir \
        rrdtool \
        sssd \
        sudo \
        supervisor \
        wget \
        openssl \
	&& yum clean all

# Install R and R Packages
COPY package-list.txt /tmp/package-list.txt
COPY install-r-centos7.sh /tmp/install-r.sh
RUN yum update -y \
	&& /tmp/install-r.sh \
	&& yum clean all

# Install jupyter -------------------------------------------------------------#

ARG JUPYTER_VERSION=3.8.10
RUN curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash Miniconda3-latest-Linux-x86_64.sh -bp /opt/python/jupyter && \
    /opt/python/jupyter/bin/conda install -y python==${JUPYTER_VERSION} && \
    rm -rf Miniconda3-latest-Linux-x86_64.sh && \
    /opt/python/jupyter/bin/pip install \
    jupyter \
    jupyterlab \
    rsp_jupyter \
    rsconnect_jupyter \
    workbench_jupyterlab && \
    /opt/python/jupyter/bin/jupyter kernelspec remove python3 -f && \
    /opt/python/jupyter/bin/pip uninstall -y ipykernel && \
    ln -s /opt/python/jupyter/bin/jupyter /usr/local/bin/jupyter

# Install RSW/RSC Notebook Extensions --------------------#

RUN /opt/python/jupyter/bin/jupyter-nbextension install --sys-prefix --py rsp_jupyter && \
    /opt/python/jupyter/bin/jupyter-nbextension enable --sys-prefix --py rsp_jupyter && \
    /opt/python/jupyter/bin/jupyter-nbextension install --sys-prefix --py rsconnect_jupyter && \
    /opt/python/jupyter/bin/jupyter-nbextension enable --sys-prefix --py rsconnect_jupyter && \
    /opt/python/jupyter/bin/jupyter-serverextension enable --sys-prefix --py rsconnect_jupyter

# Install Python --------------------------------------------------------------#

ARG PYTHON_VERSION=3.9.5
RUN curl -O https://repo.anaconda.com/miniconda/Miniconda3-4.7.12.1-Linux-x86_64.sh && \
    bash Miniconda3-4.7.12.1-Linux-x86_64.sh -bp /opt/python/${PYTHON_VERSION} && \
    /opt/python/${PYTHON_VERSION}/bin/conda install -y python==${PYTHON_VERSION} && \
    /opt/python/${PYTHON_VERSION}/bin/pip install \
        ipykernel \
        virtualenv \
        && \
    rm -rf Miniconda3-*-Linux-x86_64.sh && \
    /opt/python/${PYTHON_VERSION}/bin/python -m ipykernel install --name py${PYTHON_VERSION} --display-name "Python ${PYTHON_VERSION}"

# Install another Python --------------------------------------------------------------#

ARG PYTHON_VERSION_ALT=3.8.10
RUN curl -O https://repo.anaconda.com/miniconda/Miniconda3-4.7.12.1-Linux-x86_64.sh && \
    bash Miniconda3-4.7.12.1-Linux-x86_64.sh -bp /opt/python/${PYTHON_VERSION_ALT} && \
    /opt/python/${PYTHON_VERSION_ALT}/bin/conda install -y python==${PYTHON_VERSION_ALT} && \
    /opt/python/${PYTHON_VERSION_ALT}/bin/pip install \
        ipykernel \
        virtualenv \
        && \
    rm -rf Miniconda3-*-Linux-x86_64.sh && \
    /opt/python/${PYTHON_VERSION_ALT}/bin/python -m ipykernel install --name py${PYTHON_VERSION_ALT} --display-name "Python ${PYTHON_VERSION_ALT}"

# Runtime settings ------------------------------------------------------------#
RUN curl -L -o /usr/local/bin/wait-for-it.sh https://raw.githubusercontent.com/rstudio/wait-for-it/master/wait-for-it.sh && \
    chmod +x /usr/local/bin/wait-for-it.sh

# Install RStudio Professional Drivers ----------------------------------------#

ARG DRIVERS_VERSION=2021.10.0
RUN yum update -y \
	&& yum install -y --setopt=skip_missing_names_on_install=False \
		unixODBC \
		unixODBC-devel \
	&& yum clean all

RUN curl -o rstudio-drivers.rpm -O https://cdn.rstudio.com/drivers/7C152C12/installer/rstudio-drivers-${DRIVERS_VERSION}-1.el7.x86_64.rpm \
	&& yum update -y \
	&& yum install -y rstudio-drivers.rpm \
	&& yum clean all \
	&& rm -f rstudio-drivers.rpm \
	cp /opt/rstudio-drivers/odbcinst.ini.sample /etc/odbcinst.ini

# Set default env values
ENV RSW_LICENSE ""
ENV RSW_LICENSE_SERVER ""
ENV USER_NAME azureuser
ENV USER_PASSWORD ""
ENV PUID 1001
ENV PGID 1001
ENV RSW_LAUNCHER true
ENV RSW_LAUNCHER_TIMEOUT 10
ENV DIAGNOSTIC_DIR /var/log/rstudio
ENV DIAGNOSTIC_ENABLE false
ENV DIAGNOSTIC_ONLY false

# Copy config and startup
COPY startup/* /startup/base/
COPY startup-launcher/* /startup/launcher/
COPY supervisord.conf /etc/supervisor/supervisord.conf
COPY startup.sh /usr/local/bin/startup.sh
RUN chmod +x /usr/local/bin/startup.sh

# Install RStudio Workbench --------------------------------------------------#
ARG RSW_VERSION=2022.07.1+554.pro3
ARG RSW_DOWNLOAD_URL=https://download2.rstudio.org/server/centos7/x86_64
ARG RSW_NAME=rstudio-workbench
RUN yum update -y \
    && RSW_VERSION_URL=`echo -n "${RSW_VERSION}" | sed 's/+/-/g'` \
    && curl -o rstudio-workbench.rpm ${RSW_DOWNLOAD_URL}/${RSW_NAME}-rhel-${RSW_VERSION_URL}-x86_64.rpm \
    && yum install -y rstudio-workbench.rpm \
    && rm rstudio-workbench.rpm \
    # custom license manager \
	&& mkdir -p /opt/rstudio-license/ \
	&& mkdir -p /var/lib/rstudio-workbench/ \
	&& curl -sL https://s3.amazonaws.com/rstudio-ide-build/monitor/bionic/rsp-monitor-workbench-azureml-${RSW_VERSION_URL}.tar.gz | \
		tar xzvf - --strip 2 -C /opt/rstudio-license/ \
	&& chmod 0755 /opt/rstudio-license/license-manager \
	&& mv /opt/rstudio-license/license-manager /opt/rstudio-license/license-manager-orig \
    && rm -f /usr/lib/rstudio-server/bin/license-manager \
    && yum clean all \
    && rm -rf /var/lib/rstudio-server/r-versions

# Custom license manager
COPY --chmod=755 license-manager-shim /opt/rstudio-license/license-manager
COPY --chmod=755 TurboActivate.dat /opt/rstudio-license/license-manager.conf

# Install VSCode code-server, extensions, etc. --------------------------------------------------#

RUN rstudio-server install-vs-code /opt/code-server/ && \
    ln -s /opt/code-server/bin/code-server /usr/local/bin/code-server

# Install Azure CLI -----------------------------------------------------------#

RUN yum update -y \
	&& rpm --import https://packages.microsoft.com/keys/microsoft.asc \
	&& echo -e "[azure-cli] \
	name=Azure CLI \
    baseurl=https://packages.microsoft.com/yumrepos/azure-cli \
    enabled=1 \
    gpgcheck=1 \
    gpgkey=https://packages.microsoft.com/keys/microsoft.asc" | sudo tee /etc/yum.repos.d/azure-cli.repo \
    && yum install -y --setopt=skip_missing_names_on_install=False azure-cli \
    && yum clean all

# Install AzureML extension ---------------------------------------------------#

RUN az extension add -n ml -y

# Copy config
COPY conf/* /etc/rstudio/
COPY landing/* /usr/lib/rstudio-server/www/

EXPOSE 8787/tcp
EXPOSE 5559/tcp

ENTRYPOINT []
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]

FROM workbench as clamav

RUN yum update -y \
    && yum install -y clamav \
    && yum clean all

# Reconfigure freshclam to get database from our S3 location
ARG CLAMAV_MIRROR=https://cdn.rstudio.com/platform/clamav
RUN cat /etc/clamav/freshclam.conf | grep -v "DatabaseMirror" > /etc/clamav/freshclam.conf.new && \
    echo "DatabaseMirror ${CLAMAV_MIRROR}" >> /etc/clamav/freshclam.conf.new && \
    mv /etc/clamav/freshclam.conf.new /etc/clamav/freshclam.conf

# Update ClamAV
RUN freshclam --log="/var/log/clamav/clamupdate.log"

# Scan all but /sys for viruses. If this fails, the Docker build will
# fail.
RUN clamscan --recursive --infected --exclude-dir="^/sys" --log "/var/log/clamav/clamscan.log" /


# Ignore the intermediate 'clamav' multi-stage build step so we don't distribute
# with ClamAV installed. Avoid adding changes in this stage unless they are related
# to the ClamAV stage. Since the ClamAV stage may be cached, you can't guarantee
# another full scan if you change anything beyond this point.
FROM workbench AS final

# Copy ClamAV scan logs so the end user can see them.
COPY --from=clamav /var/log/clamav/clamscan.log /var/log/clamav/clamupdate.log /

LABEL \
     azure.ii.language='en-US' \
     azure.ii.support.stage='preview' \
     azure.ii.privacy='{"tracking":false,"ads":false,"network-traffic":true}' \
     azure.ii.auth='{"disable":"DISABLE_AUTH"}' \
     azure.ii.user='{"mode":"entry_point","name":"USER_NAME","uid":"PUID","gid":"PGID"}' \
     azure.ii.locale='{"tz":"TZ","lang":"LANG"}' \
     azure.ii.endpoints='[{"label":"connect","target":8787,"protocol":"http"}]' \
     org.opencontainers.image.description='A professional integrated development environment for data science teams using R and Python' \
     org.opencontainers.image.title='RStudio Workbench' \
     org.opencontainers.image.version='2022.07.1+554.pro3' \
     org.opencontainers.image.url='https://www.rstudio.com/products/workbench/'
