#!/bin/bash

set -e

echo "Building DOCKER_TAG=${DOCKER_TAG}"

apt-get update -qq && apt-get install -y jq

replace_version() {
  sed -i.bak "s/^RSP_VERSION=.*/RSP_VERSION=$1/g" ./.env
}

replace_name() {
  sed -i.bak "s/^RSP_NAME=.*/RSP_NAME=$1/g" ./.env
}

replace_base_url_s3() {
  sed -i.bak "s|^RSP_DOWNLOAD_URL=.*|RSP_DOWNLOAD_URL=https://s3.amazonaws.com/rstudio-ide-build/server/bionic/amd64|g" ./.env
}

# if daily build
# replace version number and download url
if [[ "${DOCKER_TAG}" == *"daily"* ]]; then
  echo "--> Running daily"
  # get daily version
  rawpage=`curl -s https://dailies.rstudio.com/rstudioserver/pro/bionic/x86_64/`

  # thanks to https://stackoverflow.com/a/44490624/6570011
  if [[ "$rawpage" =~ rstudio-workbench-([0-9\.\-]*)-amd64.deb ]]; then
    match="${BASH_REMATCH[1]}"
    echo "Latest version found: $match"
    replace_version $match
    replace_base_url_s3
    replace_name rstudio-workbench
  else
    # fail the build
    echo "ERROR parsing latest daily version"
    exit 1
  fi
elif [[ "${DOCKER_TAG}" == *"preview"* ]]; then
  echo "--> Running preview"
  # get raw downloads.json
  rawjson=`curl -sL https://rstudio.com/wp-content/downloads.json`

  # use jq to parse
  full_url=`echo -n $rawjson | jq -r '.rstudio.pro.preview.server.installer.bionic.url'`
  version=`echo -n $rawjson | jq -r '.rstudio.pro.preview.version'`

  echo "full_url: $full_url"

  # update .env
  replace_version $version
  replace_base_url_s3
  replace_name rstudio-workbench

elif [[ "${DOCKER_TAG}" =~ [0-9\.\-]+ ]]; then
  echo "DOCKER_TAG looks like a version number: ${DOCKER_TAG}"
  echo "Building DOCKER_TAG defined version"
  replace_version ${DOCKER_TAG}
else
  echo "No version customization necessary"
fi

echo '--> Showing .env file'
cat .env
